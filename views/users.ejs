<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0, shrink-to-fit=no">
  <title>Users</title>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/material-design-icons/3.0.1/iconfont/material-icons.min.css">
  <link rel="stylesheet" href="/css/Customizable-Background--Overlay.css">
  <link rel="stylesheet" href="/css/Data-Table-styles.css">
  <link rel="stylesheet" href="/css/Data-Table.css">
  <link rel="stylesheet" href="/css/Footer-Dark-icons.css">
  <link rel="stylesheet" href="/css/Login-Form-Basic-icons.css">
  <link rel="stylesheet" href="/css/Soft-UI-Aside-Navbar.css">
  <link rel="stylesheet" href="/css/dropdown.css">
  <link rel="stylesheet" href="/css/dialog.css">
  <link rel="stylesheet" href="/css/input.css">
  <link rel="stylesheet" href="/css/buttons.css">
  <link rel="stylesheet" href="/css/newUser.css">
  <link rel="icon" type="image/x-icon" href="/img/favicon.ico">
  <script src="https://unpkg.com/axios@1.4.0"></script>
  <script src="https://unpkg.com/vue@next"></script>
  <script src="https://code.jquery.com/jquery-3.7.0.slim.min.js" integrity="sha256-tG5mcZUtJsZvyKAxYLVXrmjKBVLd6VpVccqz/r4ypFE=" crossorigin="anonymous"></script>
  <script src="https://cdn.datatables.net/v/bs5/dt-1.13.4/datatables.min.js"></script>
  <link href="https://cdn.datatables.net/v/dt/dt-1.13.4/datatables.min.css" rel="stylesheet"/>
</head>

<body>
  <%- include("includes/navbar.ejs") %>
  <div class="container py-4 py-xl-5">
    <br>
    <div id="app">
      <form @submit.prevent="search">
      <input type="text" v-model="searchTerm" class="input" @keyup.enter="search" placeholder="Search...">
    </form>
    <br>
    <h4>Pending Users</h4>
    <table id="pendingUsers" class="table table-striped ">
      <thead>
        <tr>
          <th>ID</th>
          <th>Name</th>
          <th>Role</th>
          <% if (session.user.type === 'admin') {%>
          <th>School</th>  
          <% } %>
          <th>Manage</th>
        </tr>
      </thead>
      <tbody>
        <% pendingUsers.forEach(user=> { %>
        <tr>
          <td><%= user.id %></td>
          <td><%= user.name %></td>
          <td><%= user.type %></td>
          <% if (session.user.type === 'admin') {%>
            <td><%= user.school_name %></td>
            <% } %>
          <td>
            <div class="d-flex">
            <form name="acceptForm" method="POST" action="/users/pending/accept/<%=user.id%>">
              <input type="hidden">
              <button class="btn btn-success ms-md-2" role="button" type="submit">Accept</button>
            </form>
            <form name="denyForm" method="POST" action="/users/pending/deny/<%=user.id%>">
              <input type="hidden">
              <button class="btn btn-danger ms-md-2" role="button" type="submit">Deny</button>
            </form>

            <button class="btn btn-primary ms-md-2" type="button" @click="getUserData(<%= user.id %>, true)">Show More</button>
          </td>
         </div>
          </tr>
        <% }); %>
      </tbody>
    </table>
    <h4>Users</h4>
    <table id="users" class="table table-striped">
      <thead>
        <tr>
          <th>ID</th>
          <th>Name</th>
          <th>Role</th>
          <% if (session.user.type === 'admin') {%>
          <th>School</th>
          <% } %>
          <th>Manage</th>
        </tr>
      </thead>
      <tbody>
        <% users.forEach(user=> { %>
          <tr>
            <td><%= user.id %></td>
            <td><%= user.name %></td>
            <td><%= user.type %></td>
            <% if (session.user.type === 'admin') {%>
              <td><%= user.school_name %></td>
              <% } %>
            <td>
                <button class="btn btn-primary ms-md-2" type="button" @click="getUserData(<%= user.id %>)">More</button>
            </td>
            </tr>
          <% }); %>
      </tbody>
    </table>
      <button class="btn btn-primary floating-button" @click="openCreateDialog">
        <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" fill="currentColor" viewBox="0 0 16 16">
          <path d="M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z" />
        </svg>
      </button>
      <%- include("includes/userInfo.ejs") %>
      <%- include("includes/editUser.ejs") %>
      <%- include("includes/newUser.ejs") %>
    </div>
  </div>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js"></script>
  <script>
    const app = Vue.createApp({
      data() {
        return {
        searchTerm: '',
        infoPanel: "dialog-container hidden",
        editPanel: "dialog-container hidden",
        createPanel: "dialog-container hidden",
        user: null,
        message: null,
        // Edit Info
        username: '',
        password: '',
        real_name: '',
        date_of_birth: '',
        email: '',
        address: '',
        phone_number: '',
        school_id: '',
        // Create Info (same as edit +)
        type: ''
        }
      },
      methods: {
        search() {
          const name = this.searchTerm.replace(' ', '%20');
          window.location.href = '/users?name=' + name;
        },
        getUserData(id, pending = false) {
          if (pending) {
            axios.get('http://localhost:3000/users/' + id + '?status=pending')
            .then(response => {
              this.user = response.data;
              this.user.status = 'pending';
              this.infoPanel = "dialog-container";
            })
            .catch(error => {
              console.log('Error:', error);
            });
          } else {
          axios.get('http://localhost:3000/users/' + id)
            .then(response => {
              this.user = response.data;
              this.user.status = 'active';
              this.infoPanel = "dialog-container";
            })
            .catch(error => {
              console.log('Error:', error);
            });
          }
        },
        openEditDialog() {
          this.username = this.user.username;
          this.password = this.user.password;
          this.real_name = this.user.real_name;
          this.date_of_birth = this.user.date_of_birth;
          this.email = this.user.email;
          this.address = this.user.address;
          this.phone_number = this.user.phone_number;
          this.infoPanel = "dialog-container hidden";
          this.editPanel = "dialog-container";
        },
        openCreateDialog() {
          this.createPanel = "dialog-container";
        },
        closeDialog(panel) {
          this.user = null;
          this.message = null;
          if(panel === 'info') {
            this.infoPanel = "dialog-container hidden";
          } else if (panel === 'edit') {
            this.editPanel = "dialog-container hidden";
            this.username = '';
            this.password = '';
            this.real_name = '';
            this.date_of_birth = '';
            this.email = '';
            this.address = '';
            this.phone_number = '';
          } else if (panel === 'create') {
            this.createPanel = "dialog-container hidden";
            this.username = '';
            this.password = '';
            this.real_name = '';
            this.date_of_birth = '';
            this.email = '';
            this.address = '';
            this.phone_number = '';
            this.type = '';
          }
        },
        editUser() {
          const params = new URLSearchParams();
          params.append('username', this.username);
          params.append('password', this.password);
          params.append('real_name', this.real_name);
          params.append('date_of_birth', this.date_of_birth);
          params.append('email', this.email);
          params.append('address', this.address);
          params.append('phone_number', this.phone_number);
          if(school_id && this.type === 'manager') {
            params.append('school_id', this.school_id);
          }
          axios.post('http://localhost:3000/users/edit/' + this.user.id, params)
            .then(response => {
              this.message = response.data;
            })
            .catch(error => {
              console.log('Error:', error);
              this.message = error.response.data;
            });
        },
        createUser() {
          const params = new URLSearchParams();
          params.append('username', this.username);
          params.append('password', this.password);
          params.append('real_name', this.real_name);
          params.append('date_of_birth', this.date_of_birth);
          params.append('email', this.email);
          params.append('address', this.address);
          params.append('phone_number', this.phone_number);
          params.append('type', this.type);
          if(school_id && this.type === 'manager') {
            params.append('school_id', this.school_id);
          }
          axios.post('http://localhost:3000/users/create', params)
            .then(response => {
              this.message = response.data;
            })
            .catch(error => {
              console.log('Error:', error);
              this.message = error.response.data;
            });
        }
      }
    });
    app.mount('#app')
    $(document).ready(function() {
      $('#pendingUsers').DataTable({
        paging: false,
        searching: false,
        info: false,
        columnDefs: [
          { "width": "5%", "targets": 0 },
          { "width": "40%", "targets": 1 },
          { "width": "15%", "targets": 2 },
          { "width": "30%", "targets": 3 }
        ]
      });
      $('#users').DataTable({
        paging: false,
        searching: false,
        info: false,
        columnDefs: [
          { "width": "5%", "targets": 0 },
          { "width": "40%", "targets": 1 },
          { "width": "15%", "targets": 2 },
          { "width": "30%", "targets": 3 }
        ]
      });
    });
  </script>
</body>

</html>